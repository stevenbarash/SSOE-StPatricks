{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","rotation","state","score","guessedLetters","correctLetters","currentWheelValue","spinWheel","bind","wheel","document","getElementById","wheelStyle","window","getComputedStyle","classList","add","style","animationPlayState","setTimeout","remove","getPropertyValue","values","split","a","b","angle","Math","round","atan2","PI","console","log","setState","checkGuess","input","prompt","guess","length","toUpperCase","alert","this","includes","push","addToBoard","newScore","correctLetter","store","querySelectorAll","i","innerHTML","className","id","src","onClick","Component","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.84d73f1f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { TweenMax, Power4 } from \"gsap\";\nimport { wait } from \"@testing-library/react\";\n\n// import Confetti from 'react-confetti'\n// const { width, height } = useWindowSize()\n\nexport default class App extends Component {\n  rotation = 0;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: 0,\n      guessedLetters: [],\n      correctLetters: [\n        \"H\",\n        \"A\",\n        \"P\",\n        \"Y\",\n        \"S\",\n        \"T\",\n        \"D\",\n        \"F\",\n        \"R\",\n        \"O\",\n        \"M\",\n        \"W\",\n        \"N\"\n      ],\n      currentWheelValue: 500\n    };\n    this.spinWheel = this.spinWheel.bind(this);\n  }\n\n  // animateWheel() {\n  //   var rotation;\n  //   var wheel = document.getElementById(\"wheel\");\n\n  //   let randomNum = Math.floor(Math.random() * 10);\n  //   rotation += 30 * 10 + 30 * randomNum;\n\n  //   TweenMax.to(wheel, 10, {\n  //     ease: Power4.easeOut,\n  //     rotation: rotation,\n  //     onComplete: this.checkGuess\n  //   });\n  // }\n\n  async spinWheel() {\n    var wheel = document.getElementById(\"wheel\");\n    var wheelStyle = window.getComputedStyle(wheel, null);\n\n    wheel.classList.add(\"wheel-animated\");\n\n    wheel.style.animationPlayState = \"running\";\n\n    // var newWheel = wheel.cloneNode(true);\n\n    // wheel.parentNode.replaceChild(newWheel, wheel);\n\n    // console.log((Math.random*10))\n\n    var angle = 0;\n    setTimeout(() => {\n      var wheel = document.getElementById(\"wheel\");\n      // var wheelStyle = window.getComputedStyle(wheel, null);\n\n      wheel.classList.add(\"stop-animation\");\n      wheel.style.animationPlayState = \"paused\";\n      wheel.classList.remove(\"wheel-animated\");\n\n      var rotation = wheelStyle.getPropertyValue(\"transform\");\n\n      //takes cosine and sine of rotation, does some geometry to get rotation degree value\n      if (rotation !== \"none\" && rotation !== null) {\n        var values = rotation\n          .split(\"(\")[1]\n          .split(\")\")[0]\n          .split(\",\");\n        var a = values[0];\n        var b = values[1];\n        angle = Math.round(Math.atan2(b, a) * (180 / Math.PI));\n      } else {\n        var angle = 0;\n      }\n\n      //make sure the wheel rotation doesn't reset\n      // wheel.style.transform = \"rotate(\" + angle + \"deg)\";\n\n      console.log(angle);\n\n      // sets the currentWheelValue to the value the spinner is at\n      // the higher scores are between these degrees of rotation\n      if (angle <= 185 && angle >= 173) {\n        this.setState({\n          currentWheelValue: 1000\n        });\n      }\n      if ((angle <= 7 && angle >= 0) || (angle <= 353 && angle >= 359)) {\n        this.setState({\n          currentWheelValue: 2500\n        });\n      } else {\n        this.setState({\n          currentWheelValue: 500\n        });\n      }\n      console.log(rotation);\n      // wheel.classList.add(\"stop-animation\");\n      wheel.classList.remove(\"wheel-animated\");\n\n      this.checkGuess();\n    }, 1200);\n\n    // document.getElementById(\"wheel\").classList.remove(\"wheel-animated\");\n    // document.getElementById(\"wheel\").classList.remove(\"stop-animation\");\n\n    //spin wheel, set state to what the wheel is at\n    // let randomNum = Math.floor(Math.random() * 10);\n    // let duration = Math.floor(100);\n\n    // rotation += 30 * duration + 30 * randomNum;\n\n    // if(this.state.currentWheelValue!== 0){\n\n    // }\n\n    //do UI stuff, make spin random\n    return 1;\n  }\n\n  async checkGuess() {\n    // var doneSpinning = await this.spinWheel();\n\n    // var doneSpinning = true;\n\n    //prompt user for a guess, check if the letter was already guessed.\n    // if not, then it checks if it is in the correct letters array\n    // adds/subtracts score based on current wheel value depending on correct/incorrect answer\n    // this.spinWheel();\n    var input = prompt(\"Enter a Letter\");\n    var guess = \"\";\n    //rejects input if null or length greater than 1\n    if (input !== null && input.length == 1) {\n      guess = input.toUpperCase();\n    } else {\n      alert(\"Please only input single letters.\");\n    }\n\n    if (this.state.guessedLetters.includes(guess)) {\n      alert(\"You already guessed this.\");\n      this.checkGuess();\n    } else {\n      //check if correctletters array contains guess\n      if (this.state.correctLetters.includes(guess)) {\n        this.setState({\n          score: this.state.score + this.state.currentWheelValue\n        });\n        this.state.guessedLetters.push(guess);\n\n        this.addToBoard(guess);\n        // if (this.state.guessedLetters.includes) {\n        //   alert(\"You win!\");\n        // }\n      } else {\n        //subtract current wheel value from score, record guessed letter\n        var newScore = this.state.score - this.state.currentWheelValue;\n        this.state.guessedLetters.push(guess);\n\n        this.setState({ score: newScore });\n      }\n    }\n  }\n\n  addToBoard(correctLetter) {\n    //adds letter to board\n    // check at the end if all letters are added, disable spin button\n\n    var store = document.querySelectorAll(\".inner \" + \".\" + correctLetter);\n    for (var i = 0; i < store.length; i++) {\n      store[i].innerHTML = \"<p>\" + correctLetter + \"</p>\";\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"fl-container\">\n        <div className=\"logo\">\n          <span className=\"logo__text\">Luck O'</span>\n          <span className=\"logo__text second\">The Irish</span>\n          <span className=\"logo__shadow\">Luck O'</span>\n          <span className=\"logo__shadow second\">The Irish</span>\n        </div>\n        <div className=\"game-area-container\">\n          <div className=\"wheel-container\">\n            <div className=\"arrow\">▼</div>\n            <div id=\"wheel\" className=\"wheel\">\n              <img src=\"./spinner.png\" />\n            </div>\n          </div>\n\n          <div className=\"container\">\n            {/* --------- Row 1 */}\n            <div className=\"tile push\">\n              <div className=\"inner\"></div>\n            </div>\n            <div className=\"tile\">\n              <div className=\"inner\"></div>\n            </div>\n            <div className=\"tile\">\n              <div className=\"inner\"></div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"H\"> </p>\n              </div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"A\"> </p>\n              </div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"P\"> </p>\n              </div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"P\"> </p>\n              </div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"Y\"> </p>\n              </div>\n            </div>\n            <div className=\"tile\">\n              <div className=\"inner\"></div>\n            </div>\n            <div className=\"tile\">\n              <div className=\"inner\"></div>\n            </div>\n            <div className=\"tile\">\n              <div className=\"inner\"></div>\n            </div>\n            {/* --------- Row 2 */}\n            <div className=\"tile start\">\n              <div className=\"inner\"></div>\n            </div>\n            <div className=\"tile\">\n              <div className=\"inner\"></div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"S\"> </p>\n              </div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"T\"> </p>\n              </div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p>.</p>\n              </div>\n            </div>\n            <div className=\"tile\">\n              <div className=\"inner\"></div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"P\"> </p>\n              </div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"A\" />\n              </div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"T\"> </p>\n              </div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"T\"> </p>\n              </div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"Y\"> </p>\n              </div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p>'</p>\n              </div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"S\"> </p>\n              </div>\n            </div>\n            <div className=\"tile\">\n              <div className=\"inner\"></div>\n            </div>\n            {/* --------- Row 3 */}\n            <div className=\"tile start\">\n              <div className=\"inner\"></div>\n            </div>\n            <div className=\"tile\">\n              <div className=\"inner\"></div>\n            </div>\n            <div className=\"tile\">\n              <div className=\"inner\"></div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"D\"> </p>\n              </div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"A\"> </p>\n              </div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"Y\"> </p>\n              </div>\n            </div>\n            <div className=\"tile\">\n              <div className=\"inner\"></div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"F\"> </p>\n              </div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"R\"> </p>\n              </div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"O\"> </p>\n              </div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"M\"> </p>\n              </div>\n            </div>\n            <div className=\"tile\">\n              <div className=\"inner\"></div>\n            </div>\n            <div className=\"tile\">\n              <div className=\"inner\"></div>\n            </div>\n            <div className=\"tile\">\n              <div className=\"inner\"></div>\n            </div>\n            {/* -------- Row 4 */}\n            <div className=\"tile push\">\n              <div className=\"inner\"></div>\n            </div>\n            <div className=\"tile\">\n              <div className=\"inner\"></div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"S\"> </p>\n              </div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"W\"> </p>\n              </div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"A\"> </p>\n              </div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"N\"></p>\n              </div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"S\"> </p>\n              </div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"O\"> </p>\n              </div>\n            </div>\n            <div className=\"tile white\">\n              <div className=\"inner\">\n                <p className=\"N\" />\n              </div>\n            </div>\n            <div className=\"tile\">\n              <div className=\"inner\"></div>\n            </div>\n            <div className=\"tile\">\n              <div className=\"inner\"></div>\n            </div>\n            <div className=\"tile\">\n              <div className=\"inner\"></div>\n            </div>\n          </div>\n        </div>\n        <h1>Score: {this.state.score}</h1>\n        <button\n          className={\"reset-btn\"}\n          onClick={() => {\n            this.spinWheel();\n          }}\n        >\n          Spin\n        </button>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}